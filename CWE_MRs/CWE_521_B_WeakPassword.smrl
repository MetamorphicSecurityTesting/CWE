import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;
import sun.security.util.Password
import java.rmi.server.Operation
import smrl.mr.crawljax.WebOutputCleaned

package smrl.mr.owasp {
 
/**
 * CWE Definition:
 * The product does not require that users should have strong passwords, which makes it easier for attackers 
 * to compromise user accounts.
 * 
 * Idea:
 * The idea is that a good system should not allow the user to create an account with a weak password.
 * We create a list of weak password i.e. only numbers, only characters, and etc.
 * for each password parameter we will try a weak passwords from our list, and a good system should not allow the user to
 * sign up with that weak password.
 * 
 * Comments:
 * (1) For loop iterates over all actions of the Input(1)
 * (2) Store the parameters of the current action in a variable
 * (3) Creates some random values to be used as username for source and follow-up inputs.
 * (4) filters the webpages that contain a form input.
 * (5) Checks that the user will submit the form.
 * (6) It checks if the current action of the Input(1) is signing up.
 * (7) Makes sure that the URL was not seen before, to speed up the process.
 * (8) Creates Input(2) as the follow-up input.
 * 
 * To make sure we are targeting only the password field, we are giving some default values to the other input entries.
 * (9) Set the weak value for the password value of the Input(2)
 * (10),(15) Enters the random value for the name.
 * (11),(16) Enters the random value for the username or ID.
 * (12),(17) Enters the random value for the email address. 
 * (13) Creates Input(3) as the second follow-up input.
 * (14) Considers a strong password for input(3).
 * (18) The Input(2) should not be able to sign up with a weak password, she should see a different content
 *      or an error page.
 * 
 */
 
MR CWE_521_b {  
 { 
    for ( Action action : Input(1).actions() ) {                                                      //(1)
	  	var pos = action.getPosition();                                                               //(2)
	  	var randomString =  "rand"+(Math.random()*1000) as int;                                       //(3)
	  	var randomString_A = randomString+"A";
	  	var randomString_B = randomString+"B";
	 
	   IMPLIES( 
	   	     
	   	      action.containAnyFormInput()&&                                                          //(4)
	       	  action.isClickOnButton &&                                                               //(5)
	       	  isSignup(action)&&                                                                      //(6)
 			 // userCanRetrieveContent(action.getUser(), Output(Input(1),pos)) &&        				
 			  notTried( action.url, Input(1).actions().get(pos).getElementURL() ) && 				  //(7)	
	         
	          
	          EQUAL ( Input(2), Input(1) )&&	                                                      //(8)			    			
	    	  Input(2).actions.get(action.position).setFormInputsOfType(WeakPassword(),"password") && //(9)
	    	  Input(2).actions.get(action.position).setFormInputsOfType(randomString,"text") &&       //(10)
	    	  Input(2).actions.get(action.position).setFormInputsParameterValue("text",getSysConfig().getSignupUserParam(),randomString_B) && //(11)
	    	  Input(2).actions.get(action.position).setFormInputsParameterValue("text","email","ahg@hhh.com") &&                              //(12)
	    	  
	    	  EQUAL ( Input(3), Input(2) ) &&                                                          //(13)
	          
	          Input(3).actions.get(action.position).setFormInputsOfType("@_aAn@12","password") &&      //(14)
	    	  Input(3).actions.get(action.position).setFormInputsOfType(randomString,"text") &&        //(15)
	    	  Input(3).actions.get(action.position).setFormInputsParameterValue("text",getSysConfig().getSignupUserParam(),randomString_A) &&  //(16)
	    	  Input(3).actions.get(action.position).setFormInputsParameterValue("text","email","ahg@hhh.com")                                  //(17)
	    	   
		    , 
		   OR(                                                                                          //(18)
		    different(Output(Input(2), pos),Output(Input(3), pos))
		     
	    ,	isError(Output(Input(2), pos)))
		    	
		);//end-IMPLIES
	}//end-for
 } 
}//end-MR
}//end-package


