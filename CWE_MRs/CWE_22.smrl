/**
 * Authors:
 * Nazanin Bayati Chaleshtari, n.bayati@uottawa.ca (First implementation and maintenance)
 * Fabrizio Pastore, fabrizio.pastore@uni.lu (Validation)
 */

import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;

package smrl.mr.owasp{

/*
 * CWE Definition:
 * The software uses external input to construct a pathname that is intended to 
 * identify a file or directory that is located underneath a restricted parent 
 * directory, but the software does not properly neutralize special elements 
 * within the pathname that can cause the pathname to resolve to a location that 
 * is outside of the restricted directory.
 * 
 * Idea:
 * A file path passed in a parameter should never enable a 
 * user to access data that is not provided by the user interface.
 *
 * 
 * Comments:
 * (1) It avoids clicking on OK; because dialogs are normally ignored by our framework by clicking on OK.
 * (2) For loop iterates over all actions of the Input(1)
 * (3) Stores the parameters of the current action in a variable
 * (4) Iterates over the actions that contain a form input.
 * (5) Checks if the action submits the form; i.e. the action contains clicking on submit button.
 * (6) Verifies that the URL has not been tried before.
 * (7) Filters the dynamic content.
 * (8) Creates Input(2) as the follow-up input.
 * (9) Set the path to a random file as the form input value.
 * (10) The system should show a content that the user has right to access,
 *      Or it should return and empty file or show an error page to the user.
 * 
 */ 
 
MR CWE_22 {
	
 {
	keepDialogsOpen = true;                                                                     //(1)

 	for (Action action : Input(1).actions()){                                                   //(2)
 		
 		var pos = action.getPosition();                                                         //(3) 
 		
 		for (var x = 0; action.containFormInput() && x < action.formInputs.size; x++){          //(4)
 						
 			IMPLIES(
 				action.isClickOnButton &&                                                       //(5) 
 				notTried( x+action.url, Input(1).actions().get(pos).getElementURL() )  &&       //(6)
 				userCanRetrieveContent(action.getUser(), Output(Input(1),pos))&&                //(7)
 				CREATE(Input(2), Input(1) ) &&                                                  //(8)
 				Input(2).actions.get(pos).setFormInput(x, "../"+RandomPath())                   //(9)

 				,OR(                                                                            //(10)
 					 userCanRetrieveContent(action.getUser(), Output(Input(2),pos))
 					,
 					OR(                                                                           
		    		 Output(Input(2), pos).emptyFile,                 
		    	     isError(Output(Input(2), pos))       
		    	))
 	
 			);//end-IMPLIES
		}//end-for
	}//end-for
 }
}//end-MR
}
