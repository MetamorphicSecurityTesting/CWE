/**
 * Authors:
 * Nazanin Bayati Chaleshtari, n.bayati@uottawa.ca (First implementation and maintenance)
 * Fabrizio Pastore, fabrizio.pastore@uni.lu (Validation)
 */

import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;

package smrl.mr.owasp{

/**
 * CWE Definition:
 * CWE_923: 
 * The software establishes a communication channel to (or from) an endpoint for privileged or protected 
 * operations, but it does not properly ensure that it is communicating with the correct endpoint.
 * 
 * Idea:
 * The idea is to remove the certificate from user profile and try to access the webpages. If the system 
 * does not have any mechanism to verifies that it is communicating with the correct endpoint, it would show 
 * the content to the user while she/he is requesting for an authorized action.
 * 
 * Comments:
 * (1) For loop iterates over all actions of the Input(1).
 * (2) Stores the parameters of the current action in a variable.
 * (3) Filters the actions that require certificate.
 * (4) Checks if the URL has not seen before, to speed up the process.
 * (5) It checks that the action is only available after being logged-in.
 * (6) Filters out the pages with dynamic content.
 * (7) Creates the follow-up input.
 * (8) Remove the certificate from the follow up input.
 * (9) Checks if the output generated by the action is different in the two cases.
 *     Or the user can retrieve the content that has right to access it, or she 
 *        will see an error page.
 * 
 */ 
 
MR CWE_923 {
 { 
   
    for ( Action action : Input(1).actions() ){                                        //(1)
	    var pos = action.getPosition();                                                //(2)
		IMPLIES( 
				getSysConfig().isBrowserCertificateRequired() &&                       //(3)
			    notTried(action.url, Input(1).actions().get(pos).getElementURL() )  && //(4) 
			   afterLogin(action) &&                                                   //(5)
	           userCanRetrieveContent(action.getUser(), Output(Input(1),pos))&&        //(6)
	           CREATE ( Input(2), Input(1) ) &&	                                       //(7)
	           Input(2).setUseRemovedCertificate(true)                                 //(8)			
		              
			, 
			OR(                                                                        //(9)
				different( Output(Input(1),pos), Output(Input(2),pos) )               
			,
			
			  isError(Output(Input(2),pos)))
			
			);
		 }//end-for
    } 
  }//end-MR
}//end-package
