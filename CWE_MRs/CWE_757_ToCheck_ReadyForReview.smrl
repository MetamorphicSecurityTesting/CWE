import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;
import sun.security.util.Password

package smrl.mr.owasp {
 
/**
 * CWE Definition:
 * A protocol or its implementation supports interaction between multiple actors and allows those actors
 * to negotiate which algorithm should be used as a protection mechanism such as encryption or authentication,
 * but it does not select the strongest algorithm that is available to both parties.
 * 
 * Idea:
 * we need to configure the proxy then start collecting the information, configure chrome to use that. 
 * then inspect the collected information that looks for the client to change the algorithm to the weak cipher, 
 * and check if we still can retrieve information from the server or not. look for all pages.
 * 
 * Comments:
 * (1) The for loop iterates over all actions of the Input(1).
 * (2) Stores the parameters of the current action in a variable.
 * (3) Runs the proxy 
 * (4) Creates the follow-up input.
 * (5) Sets a weak encryption algorithm to client side.
 * (6) The system should provide the content that the user has right to access.
 * 
 * 
 * Nazanin: If we cannot run the proxy to set encryption algorithm, can we cover this vulnerability with the one that considers http instead of https MR?
 * 
 * Note: Yu shall have configured Firefox with an UnsafeEncryption profile
 */
 
MR CWE_757_OTG_CRYPST_004 {
 {
   for ( Action action : Input(1).actions() ){
     IMPLIES ( ( isEncrypted( action ) &&
	   EQUAL ( Input(2) , Input(1) ) &&
	   Input(2).setUseWeakEncryption( true ) )  
	   , different ( Output( Input(1) ), Output( Input(2) ) ) )
   } 
 }
   
}//end-MR
}//end-package





