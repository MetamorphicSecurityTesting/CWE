/**
 * Authors:
 * Nazanin Bayati Chaleshtari, n.bayati@uottawa.ca (First implementation and maintenance)
 * Fabrizio Pastore, fabrizio.pastore@uni.lu (Validation)
 */

import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;
import  smrl.mr.language.actions.StandardAction;
import jdk.internal.util.xml.impl.Input

package smrl.mr.owasp{

/**
 * CWE Definition:
 * The software does not neutralize or incorrectly neutralizes user-controllable input 
 * before it is placed in output that is used as a web page that is served to other users.
 * 
 * 
 * Comments:
 * (1) It avoids clicking on OK; because dialogs are normally ignored by our framework by clicking on OK.
 * (2) For loop iterates over all actions of the Input(1)
 * (3) Stores the parameters of the current action in a variable
 * (4) Iterates over the actions that contain a form input.
 * (5) Checks if the action submits the form; i.e. the action contains clicking on submit button.
 * (6) Verifies that the URL has not been tried before.
 * (7) Checks if no pop-up / alert dialog is shown normally.
 * (8) Creates Input(2) as the follow-up input.
 * (9) Set the XSS string as the form input value.
 * (10) Either the attack was not performed or there is no pop-up in the output (reflected XSS immediately leads to a pop-up).
 * 
 */ 
MR CWE_79b_XSSreflected {
 {
 	
	keepDialogsOpen = true;                                                                      //(1)

 	for (Action action : Input(1).actions()){                                                    //(2)
 		
 		var pos = action.getPosition();                                                          //(3) 
 		
 		for (var x = 0; action.containFormInput() && x < action.formInputs.size; x++){           //(4)
 			
 			IMPLIES(
 				action.isClickOnButton &&                                                        //(5)
 				notTried( x+action.url, Input(1).actions().get(pos).getElementURL() )  &&        //(6)
 				! Output(Input(1),pos).hasAlert	&&         										 //(7)                           					          
 				CREATE(Input(2), Input(1) )  &&                                                   //(8)
 				Input(2).actions.get(pos).setFormInput(x, XSSInjectionString())                  //(9)                                    
 				,
 				OR(                                                                              //(10)
		    	Output(Input(2), pos).emptyFile,        
		    	! Output(Input(2), pos).hasAlert        
		    	)
 			);
 		}
 	}
 	
  } }
 }