import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;
import sun.security.util.Password

package smrl.mr.owasp {
 
/**
 * CWE Definition:
 * The application stores sensitive information in cleartext in a cookie.
 * 
 * Attackers can use widely-available tools to view the cookie and read the sensitive information. 
 * Even if the information is encoded in a way that is not human-readable, certain techniques could 
 * determine which encoding is being used, then decode the information.
 * 
 * Idea:
 * We assume that even if the password is encrypted it can be identified, i.e. by exploring various encryption algorithms
 * Then the attacker should not be allowed to access the password field of the cookie.
 * 
 * Comments:
 * (1) For loop iterates over all actions of the Input(1).
 * (2) Stores the parameters of the current action in a variable.
 * (3) Stores the cookie of the current action in a variable.
 * (4) Creates the follow-up input.
 * (5) checks that the session value should not contain the user's password.
 * 
 * 
 */
 
MR CWE_315 { 
 {  
    for ( Action action : Input(1).actions() ) {                                                          //(1)

		var pos = action.getPosition();                                                                   //(2)
		var data = Output(Input(1),pos).session.keyValueMappings.values();                                //(3)
		//var pwd = action.user.password;                                        
	  	System.out.println(Output(Input(1),pos).session.keyValueMappings.values  );                                                          
	   IMPLIES(
	       								                          
	          EQUAL ( Input(2), Input(1) )      		    			                                  //(4)
		    ,  

	   FALSE ( Output(Input(2),pos).session.keyValueMappings.values.contains(action.user.password) ));    //(5)

	}//end-for
 } 
}//end-MR
}//end-package





