import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;

package smrl.mr.owasp{

/**
 * CWE Definition:
 * The software uses external input to construct a pathname that is intended to 
 * identify a file or directory that is located underneath a restricted parent 
 * directory, but the software does not properly neutralize special elements 
 * within the pathname that can cause the pathname to resolve to a location that 
 * is outside of the restricted directory.
 * 
 * Idea:
 * A file path passed in a parameter should never enable a 
 * user to access data that is not provided by the user interface.
 *
 * (1) Iterates over the actions of the Input(1).
 * (2) The second for loop iterates over the parameters of the action.
 * (3) Stores the parameters of the current action in a variable.
 * (4) Creates the follow-up input, named Input(2).
 * (5) Sets the value of a parameter to a random file path.
 * (6) Verifies that the system shows an error page
 *     Or the returned content is something that the user has the right to access.
 * 
 * 
 */ 
 
 

 
MR CWE_22 {
	
 {
	keepDialogsOpen = true;

 	for (Action action : Input(1).actions()){                                                  //(1)
 		var pos = action.getPosition();                                                        //(2) 
 		
 		System.out.println("ACTION "+pos+"/"+Input(1).actions().size());
 		
 		for (var x = 0; action.containFormInput() && x < action.formInputs.size; x++){                                      //(3)
 			
 			System.out.println("ACTION "+pos+"/////"+x);
 			IMPLIES(
 				
 				action.isClickOnButton &&      
 				// canReachThroughGUI( User(), Input(1).actions().get(pos).getUrl() ) &&        //(4)
 				notTried( x+action.url, Input(1).actions().get(pos).getElementURL() )  &&                             //(5)
 				userCanRetrieveContent(action.getUser(), Output(Input(1),pos))&&
 			//	! Output(Input(1),pos).hasAlert	&&                              //(6)  
 				EQUAL(Input(2), Input(1) ) &&                       //(7)
 				Input(2).actions.get(pos).setFormInput(x, "../"+RandomPath()) 

 				,OR( 
 					 userCanRetrieveContent(action.getUser(), Output(Input(2),pos))
 					,
 					OR(                                                                           //(10)
		    		 Output(Input(2), pos).emptyFile,                 
		    	     isError(Output(Input(2), pos))       
		    	))
 	
 			);//end-IMPLIES
		}//end-for
	}//end-for
 }
}//end-MR
}
