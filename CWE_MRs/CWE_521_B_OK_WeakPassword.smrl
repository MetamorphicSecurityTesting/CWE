import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;
import sun.security.util.Password

package smrl.mr.owasp {
 
/**
 * CWE Definition:
 * The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.
 * 
 * Idea:
 * We create a list of weak password i.e. only numbers, only characters, less than five characters, and etc.
 * for each password parameter we will try the weak paswords from our list, and a good system should not allow the user to
 * sign up with that weak password.
 * 
 * Comments:
 * (1) For loop iterates over all actions of the Input(1)
 * (2) Store the parameters of the current action in a variable
 * (3) It checks if the current action of the Input(1) is signing up.
 * (4) Creates Input(2) as the follow-up input.
 * (5) Set the weak value for the password value of the Input(2)
 * (6) The Input(2) should not be able to sign up with a weak password.
 * 
 */
 
MR CWE_521_b { 
 { 
       for ( Action action : Input(1).actions() ) {                                                                   //(1)
	  	
	  	var pos = action.getPosition();                                                                               //(2)
	  	
	  	//System.out.println("ACTION "+pos+"/"+action.url);														   
	  		
	  		for (var x = 0; action.containLoginFormInput() && x < action.formInputs.size; x++){                       //(3)
	  			 IMPLIES(
	        		
	        		  action.eventType == Action.ActionType.click &&                                                  //(4)
	        		   isSignup(action)&&                                                                             //(5)
	        		   
	        		//  notTried(XQueryInjection()+ x +action.url, Input(1).actions().get(pos).getElementURL() )     
	        		 													   //(5)							
	       			  EQUAL ( Input(2), Input(1) ) &&	    													      //(6)	                                                                        
	        		  Input(2).actions.get(action.position).setUsernameFormInput(x, WeakPassword())                   //(7)  
	        		  
		            //  Input(2).actions.get(action.position).setValueForParametersOfType("password", WeakPassword())
		  
		    ,   
		    OR( //(8)
		    
		    	isError(Output(Input(2), pos)),
		    	different ( Output(Input(1),pos),  Output(Input(2),pos))
		    	
		    	)
		    	
		);//end-IMPLIES
	}//end-for
 } }
}//end-MR
}//end-package





