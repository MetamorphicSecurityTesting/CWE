import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;

package smrl.mr.owasp{

/**
 * 
 * CWE Definition:
 * Allowing password aging to occur unchecked can result in the possibility of diminished password integrity.
 * 
 * Comments:
 * (1) To keep track of actions that Input(1) can do, two for loops are implemented.
 * (2) It checks whether the current action X is doing "log out".
 * (3) It checks that the next action of the Input(1) is "log in".
 * (4) It also makes sure that the user previously did not access to the current URL address
 * (5) Creates a copy of the Input(1), named Input(2)
 * (6) Add an action to Input(1) and moves time forward for a year i.e. the expected time for reseting the password (password aging).
 * (7) Set the action to Input(2) to perform after a year, which is expected to ask the user to reset the password instead of perfroming the action.
 * 
 */ 
	MR CWE_262_263 {
		{
			for ( var x=0; x < Input(1).actions().size() ; x++ ){
				for ( var y=0; y < x ; y++ ){ //(1)
					 
					IMPLIES ( 
						isLogout( Input(1).actions().get(x) ) &&  //(2)
						isLogin( Input(1).actions().get(y) ) &&   //(3)
						notTried(Input(1).actions().get(y).user, Input(1).actions().get(y).url ) &&  //(4)
						EQUAL ( Input(2) , Input(1) ) &&          //(5)
						//password shall be updated every year?
						Input(2).addAction ( x+1, Wait( 60*60*24*30*12*1000 ) ) &&  //(6)
						Input(2).addAction ( x+2, Input(1).actions().get(y) )       //(7)
						,
						different ( Output(Input(2),y),  Output(Input(2),x+2) ) //it shall prompt a password update request 
					); //end-IMPLIES
				} //end-for
			} //end-for
		}
	} //end-MR
} //end-package





