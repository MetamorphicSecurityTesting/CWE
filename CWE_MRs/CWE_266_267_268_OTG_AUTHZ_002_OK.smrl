import static smrl.mr.language.Operations.*
import smrl.mr.language.Action;

package smrl.mr.owasp {
	
  /**
   * CWE Definition:
   * CWE_266:
   * A product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.
   * 
   * CWE_267:
   * A particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, 
   * even when it is assigned to the correct entity.
   * 
   * CWE_268:
   * Two distinct privileges, roles, capabilities, or rights can be combined in a way that allows an entity to perform 
   * unsafe actions that would not be allowed without that combination.
   * 
   *
   * Idea:
   * A URL that cannot be reached by a user while navigating the user interface should not 
   * be available to that same user even when she directly requests the URL to the server. 
   * For this reason, an input sequence that is valid for a given user, should not lead to 
   * the same output when it is executed by another user, if it includes access to a URL with 
   * these characteristics.
   * 
   * Comments:
   * (1) For loop iterates over all actions of the Input(1)
   * (2) Checks whether the user in User() is not a supervisor of the user performing the current action.
   * (3) Verifies that the user cannot retrieve the URL of the action through the GUI (based on the data collected by the crawler).
   * (4) Defines a follow-up input that matches the source input except that the credentials of User() are used in this case.
   * (5) Verifies that the follow-up input leads to an error page 
   *     Or the output generated by the action containing the URL indicated above leads to two different outputs in the two cases.
   *  	
   */	 
  MR CWE_266_267_268_OTG_AUTHZ_002 {
   { 
     for ( Action action : Input(1).actions() ){                                             //(1)
	   IMPLIES(
	   	 (!isSupervisorOf(User(), action.user)) &&						                     //(2)
	     cannotReachThroughGUI( User(), action.url )    				                     //(3)
	     	&&   EQUAL( Input(2), changeCredentials(Input(1), User()) )                      //(4)
		 ,
		 OR(
		 	isError(Output(Input(1),action.position)), 										 //(5)
		 	NOT( Output(Input(1),action.position).equals(Output(Input(2),action.position))) 
	   )); //end-IMPLIES
	   
     } //end-for
     
   } 
 } //end-MR
}//end-package