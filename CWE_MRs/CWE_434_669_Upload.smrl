/**
 * Authors:
 * Nazanin Bayati Chaleshtari, n.bayati@uottawa.ca (First implementation and maintenance)
 * Fabrizio Pastore, fabrizio.pastore@uni.lu (Validation)
 */

import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;
import sun.security.util.Password

package smrl.mr.owasp {
 
/**
 * 
 * CWE Definition:
 * CWE_434:
 * The software allows the attacker to upload or transfer files of dangerous types that can be 
 * automatically processed within the product's environment.
 * 
 * CWE_669:
 * The product does not properly transfer a resource/behavior to another sphere, or improperly 
 * imports a resource/behavior from another sphere, in a manner that provides unintended control over that resource.
 * 
 * Idea:
 * For all input entries that accept to upload a file, we will try to upload files with invalid types e.g. file.php or file.exe.
 * 
 * Comments:
 * (1) It avoids clicking on OK; because dialogs are normally ignored by our framework by clicking on OK.
 * (2) For loop iterates over all actions of the Input(1)
 * (3) Stores the parameters of the current action in a variable
 * (4) Iterates over the actions that contain a form input.
 * (5) Checks if the action submits the form; i.e. the action contains clicking on submit button.
 * (6) Verifies that the URL has not been tried before.
 * (7) Checks if the action initially does not have any alerts.
 * (8) Creates Input(2) as the follow-up input.
 * (9) Set the path to a file with invalid type as the form input value.
 * (10) The system should show a different result 
 *      Or the attack should not be performed.
 * 
 * 
 */
 
MR CWE_434 { 
 { 	
 	keepDialogsOpen = true;                                                                   //(1)

 	for (Action action : Input(1).actions()){                                                 //(2)
 		
 		var pos = action.getPosition();                                                       //(3) 
 		
 		for (var x = 0; action.containFormInput() && x < action.formInputs.size; x++){        //(4)	
 			
 			IMPLIES(
 				action.isClickOnButton &&                                                     //(5)
 				notTried( x+action.url, Input(1).actions().get(pos).getElementURL() )  &&     //(6)
 				! Output(Input(1),pos).hasAlert					&&                            //(7)
 			    CREATE(Input(2), Input(1) )                     &&                            //(8)
 				Input(2).actions.get(pos).setFormInput(x,  FileWithInvalidType())             //(9)
 				,
 				OR( 
 					different( Output(Input(1),pos+1),Output(Input(2),pos+1))                 //(10)
 					,
 					OR(                                                                         
		    		
		    		 Output(Input(2), pos+2).emptyFile,
		    	                
		    	     ! Output(Input(2), pos+2).hasAlert       
		    	))
 			);//end-IMPLIES
		}//end-for
	}//end-for
  }
 }//end-MR
}//end-package