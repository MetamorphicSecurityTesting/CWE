import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;

package smrl.mr.owasp {
 
/*
 * CWE Definition:
 *  The software performs authentication based on the name of a resource being accessed,
 *  or the name of the actor performing the access, but it does not properly check all possible names for that resource or actor.
 * 
 * Idea: 
 * Protection mechanism that restricts URL access can be bypassed using URL with Hashed separator. 
 * 
 * comments:
 * (1) For loop iterates over all actions of the Input(1).
 * (2) Stores the parameters of the current action in a variable.
 * (3),(4) It creates a new URL address with our defined separators
 * (5) It checks that the user is not admin.
 * (6) Checks if the current action is not available with out logging in.
 * (7) Defines a follow-up input that is a copy of the source input.
 * (8) Sets a relative path to a file
 * (9) Verifies that the given path was not tried in a previous execution of the loop (to speed up). 
 * (10) The same process for the URL with hashed separator as (7),(8),(9).
 * (11) The system should not allow the new URL to be accessible, and it should show an error page.
 * 
 */

MR CWE_289b2{
	{
var sep="/";
var hashed_sep = "%5C";
 	for ( var par=0; par < 3; par++ ){
 		 
		for ( Action action : Input(1).actions() ){
			 
			var pos = action.getPosition();
			var newUrl = action.urlPath + sep + RandomFilePath(); //// random file name?????
			var hashed_sep_newUrl =  action.urlPath + hashed_sep + RandomFilePath();
			IMPLIES( 
				
				!isAdmin(action.user) &&						
				 notAvailableWithoutLoggingIn(action) &&		/// The action should not be visible by using the hashed separator					
				
				EQUAL( Input(2), Input(1) ) &&					
			  	Input(2).actions().get(pos).setUrl( newUrl ) &&	
			  	//notTried( action.getUser(), newUrl ) &&
			  	
			  	EQUAL( Input(3), Input(1) ) &&					
			  	Input(3).actions().get(pos).setUrl( hashed_sep_newUrl ) &&	
			  	notTried( action.getUser(), hashed_sep_newUrl )			
			    ,
			    
			  AND(
			  /*    	AND(
			   			 different ( Output(Input(2),pos),Output(Input(1),pos)),
			    		 different ( Output(Input(3),pos),Output(Input(1),pos))),
			       AND(*/ 
			     		isError( Output(Input(2) , pos) ),
			      		isError( Output(Input(3) , pos) ))
			    
			   //  )
			);//end-IMPLIES
		}//end-for
		
		sep=sep+"../";
	}//end-for
 }
}//end-MR
}
