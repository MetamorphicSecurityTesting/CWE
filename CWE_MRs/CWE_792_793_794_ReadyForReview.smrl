import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;

package smrl.mr.owasp {
 
/**
 * CWE Definition:
 * The software receives input from an upstream component, but it does not handle or incorrectly
 * handles when an expected special element is missing.
 * 
 * Extra Details:
 * Developers should anticipate that special elements will be removed in the input vectors of their 
 * software system. Use an appropriate combination of denylists and allowlists to ensure only valid,
 * expected and appropriate input is processed by the system.
 * 
 * Idea:
 * As the input value it gives all possible multiple occurrence of special characters in the list to check that the
 * system is vulnerable to them or not.
 * 
 * (1) For loop iterates over all actions of the Input(1).
 * (2) Stores the parameters of the action in the variable.
 * (3) Iterates over a list of all possible special characters to check all possible combinations of the input value.
 * (4) Creates the follow-up input by copying the Input(1)
 * (5) Sets the new input value for the follow-up input.
 * (6) Verifies that the system should show an error page.
 * 
 */
 
MR CWE_792_793_794_795_796_797 { 
	// This is exactly the same as  CWE_703_166_77_76_75_74 
	// The idea is when the system has an input validation mechanism that does not allow any special characters
	// then it will detect the multiple occurrence of it as well.
 { 
    for ( Action action : Input(1).actions() ) { //(1)
	  	var pos = action.getPosition();          //(2)
	  	//var input_value = action.getAttribute() //https://www.tutorialspoint.com/using-selenium-web-driver-to-retrieve-value-of-a-html-input
	  	var input_value = action.getInput();
	    
	    for (var indx =0; indx < action.getSpecialChars().length; indx ++){ //(3)
	        // var newInputValue = input_value + getSpecialChars(indx)
	        
	        IMPLIES(
	            action.containFormInput()	&&							
	            EQUAL ( Input(2), Input(1) ) &&		//(4)		    			
	    	    Input(2).actions.get(action.position).setInputValue(indx , input_value) //(5) 
	    	    //  Input(2).actions.get(action.position).setInputValue(newInputValue)  
	    	  		    ,  
		    
		    	EQUAL(Output(Input(1), pos),Output(Input(2), pos)) //(6) FABRIZIO: the "Extra Details" seem to indicate that special chars should be simply ignored, not lead to an error. Please find a concrete case.
		    	
		);//end-IMPLIES
	}}//end-for
 } 
}//end-MR
}//end-package





