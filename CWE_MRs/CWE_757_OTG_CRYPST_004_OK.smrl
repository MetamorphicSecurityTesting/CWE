import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;
import sun.security.util.Password

package smrl.mr.owasp {
 
/**
 * CWE Definition:
 * A protocol or its implementation supports interaction between multiple actors and allows those actors
 * to negotiate which algorithm should be used as a protection mechanism such as encryption or authentication,
 * but it does not select the strongest algorithm that is available to both parties.
 * 
 * Idea:
 * we need to configure the proxy then start collecting the information. 
 * then inspect the collected information that looks for the client to change the algorithm to the weak cipher, 
 * and check if we still can retrieve information from the server or not. look for all pages.
 * 
 * Comments:
 * (1) The loop iterates over all the actions of the input.
 * (2) Checks if the action works on the encrypted channel. 
 * (3) Defines a follow-up input.
 * (4) Sets the encryption algorithms to a weak one.
 * (5) Checks that the output generated by the action using the weak encryption algorithm lead to different results.
 * 
 * 
 * 
 * Note: Yu shall have configured Firefox with an UnsafeEncryption profile
 */
 
MR CWE_757_OTG_CRYPST_004_F {
 {
   for ( Action action : Input(1).actions() ){
   		
     IMPLIES ( 
     	( 
     		notTried(action.url) &&
     		isEncrypted( action ) &&
	   		EQUAL ( Input(2) , Input(1) ) &&
	   		Input(2).setUseWeakEncryption( true ) )  
	   		, 
	   		different ( Output( Input(1), action.position ), Output( Input(2), action.position ) ) )
   } 
 }
   
}//end-MR
}//end-package



