import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;
import sun.security.util.Password

package smrl.mr.owasp {
 
/**
 * Attackers can use widely-available tools to view the cookie and read the sensitive information. Even if the information
 * is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then 
 * decode the information.
 * 
 * We assume that even if the password is encrypted it can be identified, i.e. by exploring various encryption algorithms
 */
 
MR CWE_315 { 
 { 
    for ( Action action : Input(1).actions() ) {
	  	var pos = action.getPosition();
	  	var cookie = action.getCookie();
	  
	   IMPLIES(
	        !isAdmin(Input(1)) 									
	          &&  EQUAL ( Input(2), Input(1) )				    			
	    	  &&  Input(2).actions.get(action.position).retrieveCookiePassword(cookie)   	
		    ,  
		    AND(
		    	isError(Output(Input(2), pos)),
		    	different ( Output(Input(1),pos),  Output(Input(2),pos))
		    	
		    	)
		    	
		);//end-IMPLIES
	}//end-for
 } 
}//end-MR
}//end-package





