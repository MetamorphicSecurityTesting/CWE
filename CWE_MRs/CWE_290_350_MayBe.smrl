import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;

package smrl.mr.owasp {
 
/*
* Hint: re-write the comments
* 
* 
* CWE Definition:
* The software performs reverse DNS resolution on an IP address to obtain the hostname and make a security
* decision, but it does not properly ensure that the IP address is truly associated with the hostname.
* 
* Idea:
* Since DNS names can be easily spoofed or misreported, and it may be difficult for the software to detect
* if a trusted DNS server has been compromised, DNS names do not constitute a valid authentication mechanism.
* When the software performs a reverse DNS resolution for an IP address, if an attacker controls the server
* for that IP address, then the attacker can cause the server to return an arbitrary hostname. As a result, 
* the attacker may be able to bypass authentication, cause the wrong hostname to be recorded in log files to 
* hide activities, or perform other attacks.
* 
* Example: if (addr.getCanonicalHostName().endsWith("trustme.com")) {
               trusted = true; }
* 
* Comments:
* (1) For loop iterates over all Input(1)'s actions
* (2) The parameters of the current action is stored in the variable.
* (3) It makes sure that the action is available after the login.
* (4) Checks that follow-up user does not have a higher access to the system.
* (5) Creates the follow-up input by copying the Input(1) with different credentials, named Input(2).
* (6) Sets a different host name for the follow-up input that ends with the valid host name.
* (7) The system should show an error page for the user with different host name.
* 
 */

MR CWE_290_350{
	{

 		for ( Action action : Input(1).actions() ){ //(1)			 
			var pos = action.getPosition();    //(2)
			
			IMPLIES( 
				 notAvailableWithoutLoggingIn(action) &&	//(3)	
				 !isSupervisorOf(User(), Input(1))&&	//(4)		
				 EQUAL( Input(2), changeCredentials(Input(1),User()) ) 	 //(5)
			//check: 	 !notDNSServer.getHostName(currentIpofMachine()).equal(trustedHostname())&& //(6)
			// check:  	 DNSServer.setHostName(trustedHostname(), currentIpofMachine())  //(7)
			    ,
			    
			  OR(  
			   		 userCanRetrieveContent(action.getUser(), Output(Input(2),pos))   ,
			    	 isError( Output(Input(2) , pos))     //(7) 		
			  
			)
			);//end-IMPLIES	
	}//end-for
 }
}//end-MR
}
