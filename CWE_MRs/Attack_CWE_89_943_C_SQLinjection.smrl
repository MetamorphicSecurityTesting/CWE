import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;
import  smrl.mr.language.actions.StandardAction;
import jdk.internal.util.xml.impl.Input

package smrl.mr.owasp{

/**
 *
 * Webmin case: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8820
 * 
 * CWE Definition:
 * The software does not neutralize or incorrectly neutralizes user-controllable input 
 * before it is placed in output that is used as a web page that is served to other users.
 * 
 * 
 * Comments:
 * (1) For loop iterates over all actions of the Input(1)
 * (2) Stores the parameters of the current action in a variable
 * (3) The second loop iterates over all parameters of the action
 * (4) Verifies that the page can be accessed by more than one user
 * (5) Checks that the user did not visited the url before.
 * (6) Checks that the action does not lead to an alert.
 * (7) Creates the follow-up input with different credentials, named Input(2).
 * (8) Sets a XSS string for the parameter of Input(2).
 * (9) Creates a follow-up input of current user, named Input(3)
 * (10) Verifies that the result of the action is not an empty file,
 *      it means that the system neutralize the input 
 *      and also it double checks that the action does not lead to an alert.
 * 
 */ 
MR CWE_89_943_C {
 {
 	
 	keepDialogsOpen = true;
 	
	 for ( Action action : Input(1).actions() ) {                                                                   //(1)
	  	
	  	var pos = action.getPosition();                                                                            //(2)
	  	
	  	//System.out.println("ACTION "+pos+"/"+action.url);														   
	  		
	  		for (var x = 0; action.containLoginFormInput() && x < action.formInputs.size; x++){                    //(3)
	  			
	  			 IMPLIES(
	        		
	        	  action.isClickOnButton && 
	        	  userCanRetrieveContent(action.getUser(), Output(Input(1),pos)) &&       
	        	  notTried(SQLInjectionString() + x + action.url, Input(1).actions().get(pos).getElementURL() )  &&   //(4)
	        	  !isError(Output(Input(1),pos))		&&													   //(5)							
	       		  EQUAL ( Input(2), Input(1) )	 &&   													   //(6)	                                                                        
	        	  Input(2).actions.get(pos).setFormInput(x, SQLInjectionString())  			              
 				,

 				OR(                                                                     
		    		isError(Output(Input(2), pos)),                                                       
		    	     userCanRetrieveContent(action.getUser(), Output(Input(2),pos))        
		    	)
 			);
 		}
 	}
 	
  } }
 }