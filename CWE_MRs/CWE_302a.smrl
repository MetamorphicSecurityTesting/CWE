import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;

package smrl.mr.owasp {
 
/*
 The authentication scheme or implementation uses key data elements that are assumed to be immutable, 
 * but can be controlled or modified by the attacker.
cookie:
1- in addition to the domain, the URL path that the cookie is valid for can be specified. 
* if the domain and path match, then the cookie will be sent in request
2- check the expiration of the cookie.

How to test:
1- after login
2- verify the tag “;secure” flag
3- verify the tag “;HttpOnly” to be set
4- path verification: Verify path attribute has not been set too loosely. 
* e.g. if application is resides at /myapp/ then verify cookie “path = /myapp/”

attacker : path =/attacker.myapp/
path = /domain.myapp/
 
 */

MR CWE_302a{
	{
   for (Action action: Input(1).actions()){
      var pos = action.getPosition();
      IMPLIES(             
               isLogin(action)
            //   && ! alreadyObserved ( action.get(‘cookiepath’) )               
               && EQUAL(Input(2), Input(1))
               && Input(2).actions.get(action.position).setCookiePath(RandomCookiePath())               
             ,
              different( Output( Input(1), pos) , Output(Input(2) , pos) )
			&& isError( Output(Input(2) , pos))
		);//end-IMPLIES
	}//end-for
	}
}//end-MR
}//end-package





