import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;
import sun.security.util.Password

package smrl.mr.owasp {
 
/**
 * CWE Definition:
 * The product uses a cryptographic key or password past its expiration date,
 *  which diminishes its safety significantly by increasing the timing window for cracking attacks against that key.
 * 
 * Idea:
 * After specific time period the system should ask the user to change the password, which is called as password aging.
 * In this MR, we use 180 days as an example of password age that the system might show an error page or
 * redirect the user to a different page e.g. resting the password.
 * 
 * Comments:
 * (1) For loop iterates over all actions of the Input(1).
 * (2) Stores the parameters of the current action in a variable.
 * (3) It checks that the action is taken as the login.
 * (4) Creates the follow-up input.
 * (5) set an age for the password value as 180 days.
 * (6) The system should show a different result or an error page.
 * 
 */
 
MR CWE_324 { 
 { 
    for ( Action action : Input(1).actions() ) {                                          //(1)
	  	var pos = action.getPosition();                                                   //(2)
	  
	   IMPLIES(
	        isLogin(action)                                                               //(3)									
	          &&  EQUAL ( Input(2), Input(1) )		    			                      //(4)
	    	  &&  Input(2).actions.get(action.position).setPasswordAge("password", 180)   //(5)
	    	  //Where the first attribute is the input type in HTML and the second parameter is the value to be set. 
	    	  
		    ,  
		    
		     OR(                                                                           //(6)
		    	isError(Output(Input(2), pos)),
		    	different ( Output(Input(1),pos),  Output(Input(2),pos))
		    	
		    	)
		    	
		);//end-IMPLIES
	}//end-for
 } 
}//end-MR
}//end-package





