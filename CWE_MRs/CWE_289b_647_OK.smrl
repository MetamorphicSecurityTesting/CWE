import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;

package smrl.mr.owasp {
 
/*
 * Hint:
 * Once we implement the EncodeUrl() we may not need this version.
 * 
 * CWE Definition:
 *  The software performs authentication based on the name of a resource being accessed,
 *  or the name of the actor performing the access, but it does not properly check all possible names 
 *  for that resource or actor.
 * 
 * Idea:
 * Protection mechanism that restricts URL access can be bypassed using URL encoding. 
 * 
 * comments:
 * (1) For loop iterates over all actions of the Input(1).
 * (2) Stores the parameters of the current action in a variable.
 * (3) It creates a new URL address with the hashed format of the separator.
 * (4) Checks if the current action has been performed after a login.
 * (5) Checks if the current user does not have access to the URL and he/she cannot retrieve the content .
 * (6) Defines a follow-up input that is a copy of the source input.
 * (7) Sets the modified URL for the follow-up input.
 * (8) Verifies that the given URL was not tried in a previous execution of the loop (to speed up). 
 * (9) The system should not allow the follow-up input to access the content of the URL that is not accessible by the original URL.
 *     It should show an error page or a content that the user has already right to access.
 * 
 */
MR CWE_289b_647{
	{

var sep = "%5C";
 	for ( var par=0; par < 3; par++ ){
 		 
		for ( Action action : Input(1).actions() ){                                     //(1)
						 
			var pos = action.getPosition();                                             //(2)
			var newUrl = action.rephraseURL(action.urlPath, sep);                       //(3)     
			
			
			IMPLIES( 			
				afterLogin(action) &&		                                             //(4)					
				isError( Output(Input(1) , pos) )	 &&                                  //(5)
				
				EQUAL( Input(2), Input(1) ) &&	                                         //(6)				
			  	Input(2).actions().get(pos).setUrl( newUrl ) &&	                         //(7)
			  	notTried( action.getUser(), newUrl )                                     //(8)
			  
			    ,     
			     	 OR(                                                                  //(9)
			     		isError( Output(Input(2) , pos) ),
			     		userCanRetrieveContent(action.getUser(),Output(Input(2) , pos))	)
			      	      
			);//end-IMPLIES
		}//end-for

	}//end-for
 }
}//end-MR
}
