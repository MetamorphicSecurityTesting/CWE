import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;
import  smrl.mr.language.actions.StandardAction;

package smrl.mr.owasp{

/**
 *
 * Webmin case: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8820
 * 
 * CWE Definition:
 * The software does not neutralize or incorrectly neutralizes user-controllable input 
 * before it is placed in output that is used as a web page that is served to other users.
 * 
 * Comments:
 * (1) 
 * (2) For loop iterates over all actions of the Input(1)
 * (2) Stores the parameters of the current action in a variable
 * (3) The second loop iterates over all parameters of the action
 * (4) Verifies that the page can be accessed by more than one user
 * (5) Checks that the user did not visited the url before.
 * (6) Checks that the action does not lead to an alert.
 * (7) Creates the follow-up input with different credentials, named Input(2).
 * (8) Sets a XSS string for the parameter of Input(2).
 * (9) Creates a follow-up input of current user, named Input(3)
 * (10) Verifies that the result of the action is not an empty file,
 *      it means that the system neutralize the input 
 *      and also it double checks that the action does not lead to an alert.
 * 
 */ 
MR TEST_ExecutedInputs {
 {
 	//Dialogs are normally ignored by our framework by clicking on OK; with the following we avoid clicking on OK
	keepDialogsOpen = true;                                                                    //(1)

 	for (Action action : Input(1).actions()){                                                  //(2)
 		var pos = action.getPosition();                                                        //(3) 
 		System.out.println("Action: "+pos);
 		//We try every form input
 		for (var x = 0; x < 3; x++){         //(4)
		
			System.out.println("formInput: "+x);
 			IMPLIES(
 				
 				EQUAL(Input(2), Input(1) )                     &&                              //(7)
 				
 				EQUAL(Input(3), Input(1) )                                                     //(9)              
 				,
 				equal(                                                                            //(10)
		    		 //either the attack was not performed
		    		 Output(Input(1), pos),
		    		 Output(Input(2), pos)
		    	)
 			);
 		}
 	}
 	
  } }
 }