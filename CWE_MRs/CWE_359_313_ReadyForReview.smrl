import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;
import java.util.function.Predicate;
import java.util.stream.Collectors;

package smrl.mr.owasp{

/**
 * CWE-359:
 * 
 * The product does not properly prevent a person's private, personal information from being accessed by actors who either (1) are not explicitly authorized to 
 * access the information or (2) do not have the implicit consent of the person about whom the information is collected.
 * 
 * CWE-313:
 * The application stores sensitive information in cleartext in a file, or on disk. 
 * 
 * Idea:
 * when we identify a page that can be accessed only by a user then it means that the information contained in it is reserved, thus the log generated when processing it should not contain reserved information.
 * 
 * 
 * 
 * Comments:
 * (1) For loop iterates over all actions of the Input(1).
 * (2) Creates a cache of the current status of the log file.
 * (3) Verified that current action follows a login.
 * (4) Verifies that the current action is reserved to the current user (i.e., a follow-up user cannot perform it)
 * (5) Verifies that the current URL leads to some output
 * (6) Verifies that the that new lines generated into the log file when processing the input (6b)
 * 		do not include keywords that appear only in pages of the user and in particular in the page generated for the current action (6c).
 * 
 * 
 */ 
MR CWE_359_313 {
 {

 	for (Action action : Input(1).actions()){                                        //(1)
 		 
 
// 			IMPLIES(
// 		
// 				(!isSupervisorOf(User(), action.user)) &&                            //(3)
// 				afterLogin(action) &&                                                //(4)
// 				EQUAL(Input(2), changeCredentials(Input(1), User())) &&              //(5)
// 			    notTried( Input(2), Input(2).actions().get(pos).getUrl() )           //(6)   
// 				,
// 				
// 				OR(                                                                  //(7)
//		    		isDeltaLogDifferent(Output(Input(2), pos),Output(Input(1), pos)) // Based on the implementation of the function the implementation of the MR may change.
//		    		,
//		    		isError(Output(Input(2), pos))
//		    	)
// 			);
 			
 			
 			
 			var initialLog = Log();		//(2)
 			
 						
 			IMPLIES(
 				afterLogin(action) &&                                                //(3)
 				cannotReachThroughGUI(User(),action.url)	&&						//(4)   
 				Output(Input(1),action.position).values.size > 0					//5
 				, 
 								
				NOT ( containsAny( 													//(6a)
						Log().newLines(initialLog), 								//(6b)
						Output(Input(1),action.position).values.filter[ e | reservedKeywords(action.user).contains(e) ].toList() //(6c)
				) )
				
 			);
 		}
 	}
 	
  } 
 }