import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;
import sun.security.util.Password

package smrl.mr.owasp {
 
/**
 * 
 * CWE Definition:
 * XSS: The software does not neutralize or incorrectly neutralizes user-controllable input 
 * before it is placed in output that is used as a web page that is served to other users.
 * 
 * Idea:
 * for all actions we inject the URL of the action with XSS strings to verify that 
 * is there any vulnerable URL in the system or not. The system should show an error page
 * or a different output after injecting the URL.
 * 
 * Comments:
 * (1) For loop iterates over all actions of the Input(1).
 * (2) Defines a variable to store the position of the Input(1)'s action.
 * (3) Defines a new URL with the injected XSS value.
 * (4) Creates the follow-up input by copying the Input(1).
 * (5) Sets the modified URL to the follow-up input.
 * (6) Checks that the URL has not been previously seen.
 * (7) Makes sure that the result of the Input(1) and the follow-up input is different
 *     Or The user is retrieving the content that has right to access it.
 *  
 * 
 */
 
MR CWE_703_Jenkins { 
 { 				   
		 for ( Action action : Input(1).actions() ) { //(1)
	  for ( var par=0; par < action.getParameters().size(); par++ ){  //(2)  
	  	var pos = action.getPosition(); //(3)
	  	
	        IMPLIES(
	            isSignup(action)	&&	//(4)						
	            EQUAL ( Input(2), Input(1) ) &&		//(5)		    			
	    	    Input(2).actions().get(pos).setParameterValue(par, test_username()) //(6) 
	    	    //  Input(2).actions.get(action.position).setInputValue(newInputValue)  
	    	  		    ,  
		    
		    	EQUAL(Output(Input(1), pos),Output(Input(2), pos)) //(6) FABRIZIO: the "Extra Details" seem to indicate that special chars should be simply ignored, not lead to an error. Please find a concrete case.
		    	
		);//end-IMPLIES
	}//end-for
 }}
  
}//end-MR
}//end-package





