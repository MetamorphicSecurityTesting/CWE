/**
 * Authors:
 * Nazanin Bayati Chaleshtari, n.bayati@uottawa.ca (First implementation and maintenance)
 * Fabrizio Pastore, fabrizio.pastore@uni.lu (Validation)
 */

import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;

package smrl.mr.owasp {
 
/**
 * 
 * CWE Definition:
 * CWE_792: The software receives data from an upstream component, but does not completely 
 * filter one or more instances of special elements before sending it to a downstream component.
 * 
 * CWE_793: The software receives data from an upstream component, but only filters a single 
 * instance of a special element before sending it to a downstream component.
 * 
 * CWE_794: The software receives data from an upstream component, but does not filter all 
 * instances of a special element before sending it to a downstream component.
 * 
 * CWE_795: The software receives data from an upstream component, but only accounts for special 
 * elements at a specified location, thereby missing remaining special elements that may exist 
 * before sending it to a downstream component
 * 
 * CWE_796: The software receives data from an upstream component, but only accounts for special 
 * elements positioned relative to a marker (e.g. "at the beginning/end of a string; the second 
 * argument"), thereby missing remaining special elements that may exist before sending it to a 
 * downstream component.
 * 
 * CWE_797: The software receives data from an upstream component, but only accounts for special 
 * elements at an absolute position (e.g. "byte number 10"), thereby missing remaining special 
 * elements that may exist before sending it to a downstream component.
 * 
 * Idea:
 * In this MR, we will check if the system is vulnerable to special character injection or not.
 * In the other word, we test if the system under test has an input validation mechanism for the inputs from the user.
 * 
 * Comments:
 * (1) It avoids clicking on OK; because dialogs are normally ignored by our framework by clicking on OK.
 * (2) For loop iterates over all actions of the Input(1).
 * (3) Iterates over all parameters of each action
 * (4) Stores the parameters of the action in the variable. 
 * (5) Reads the user's input value and keeps it in a variable.
 * (6) Checks if the URL was not tried before, to speed up the process.
 * (7) Filters out the boolean input values.
 * (8) Creates the follow-up input by copying the Input(1)
 * (9) Sets the new input value which contains special character for the follow-up input.
 * (10) Verifies that the system should show an error page or it would neutralize the input.
 * 
 * 
 */
 
MR CWE_792_793_794_795_796_797_G{ 
 { 
 	keepDialogsOpen = true;                                                                                                  //(1)
     for ( Action action : Input(1).actions() ) {                                                                            //(2)
	  for ( var par=0; par < action.getParameters().size(); par++ ){                                                         //(3)  
	  	
	  	var pos = action.getPosition();                                                                                      //(4)
	  	var value = Input(1).actions().get(pos).getParameterValue(par);                                                      //(5)
	  	       
	        IMPLIES(
	            notTried( Input(1).actions().get(pos).getUrl() ) &&                                                           //(6)
	            value != Boolean &&                                                                                           //(7)           
 				CREATE(Input(2), Input(1))&&  	                                                                              //(8)   			
	    	    Input(2).actions().get(pos).setParameterValue(par, SCInjection_beginning_double(value , SpecialCharacters())) //(9) 
	    	      ,  
		    
		    	OR(
		    		 isError(Output(Input(2), pos)),                                                                          //(10)                  
		    	     EQUAL(Output(Input(1), pos),Output(Input(2), pos))) 
		);//end-IMPLIES
	  }//end-for
	}//end-for
   } 
 }//end-MR
}//end-package

