/**
 * Authors:
 * Xuan Phu MAI, xuanphu.mai@uni.lu (First implementation)
 * Nazanin Bayati Chaleshtari, n.bayati@uottawa.ca (Maintenance)
 * Fabrizio Pastore, fabrizio.pastore@uni.lu (Validation)
 */

import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;
package smrl.mr.owasp{
	
/*
 * Definition: 
 * If an action is not expected to be executed by a user 'u' (because is not 
 * available in his GUI), then user 'u' should not be able to execute that action
 * even if he changes the user id parameter in that action (i.e., the action
 * should lead to different results when executed by a valid and invalid user).
 * 
 * Comments:
 * (1) The first loop iterates over all the actions of the input sequence.
 * (2) The second iterates over all the parameters of the action to identify a parameter that specifies the user id.
 * (3) Stores the position of the current action in a variable.
 * (4) Checks if the current action contains a user ID.
 * (5) Defines the follow-up input as a copy of the source input.
 * (6) Changes the user ID to the one of User.
 * (7) Changes the login credentials of the follow-up input.
 * (8) Checks if the output generated by the action is different in the two cases.
 * 
 */
	MR OTG_AUTHZ_003 {
		{
			for ( Action action : Input(1).actions() ){                                      //(1)
				for (var par=0; par < action.getParameters().size(); par++ ){                //(2)
					var pos = action.getPosition();                                          //(3)
					IMPLIES (
							isUserIdParameter(action,par,action.getUser() ) &&               //(4)
							( CREATE ( Input(2), Input(1) ) &&                               //(5)
							Input(2).actions().get(pos).setParameterValue(par,User()) ) &&   //(6)
							CREATE (Input(3), changeCredentials(Input(1), User()) )          //(7)
							,
							different (Output(Input(2),pos), Output(Input(3),pos))           //(8)
		);//end-IMPLIES
	}//end-for
   }//end-for
  } 
 }//end-MR
}//end-package