import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;

package smrl.mr.owasp{

/**
 * CWE Definition:
 * CWE_923: 
 * The software establishes a communication channel to (or from) an endpoint for privileged or protected 
 * operations, but it does not properly ensure that it is communicating with the correct endpoint.
 * 
 * Idea:
 * An idea to test the system that whether it verifies that it is communicating with the correct endpoint is 
 * to remove the certificate from our follow-up user and try to complete the actions.
 * If the system is vulnerable, it would show the content to the user while she/he is requesting for an authorized action.
 * 
 * Comments:
 * (1) For loop iterates over all actions of the Input(1).
 * (2) Stores the parameters of the current action in a variable.
 * (3) It checks that the action is only available after being logged-in.
 * (4) Creates the follow-up input.
 * (5) Remove the certificate from the follow up input.
 * (6) Checks if the output generated by the action is different in the two cases.
 *     Or the user can retrieve the content that has right to access it.
 * 
 */ 
 
MR CWE_923 {
 { 
   
    for ( Action action : Input(1).actions() ){                                      //(1)
	    var pos = action.getPosition();                                              //(2)
		IMPLIES( 
				getSysConfig().isBrowserCertificateRequired() &&
			  afterLogin(action) &&                                                  //(3)
	           userCanRetrieveContent(action.getUser(), Output(Input(1),pos))&&
	           EQUAL ( Input(2), Input(1) ) &&	                                     //(4)
	           Input(2).setUseRemovedCertificate(true)                               //(5)			
		              
			, 
			OR(
				different( Output(Input(1),pos), Output(Input(2),pos) )                //(6)
			,
			OR(
			  userCanRetrieveContent(action.getUser(), Output(Input(2),pos)),
			  isError(Output(Input(2),pos))
			  )
			)
		);//end-IMPLIES
	}}//end-for
 
}//end-MR
}
