import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;

package smrl.mr.owasp{

/**
 * CWE Definition:
 * 923: The software establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint.
 * 297: The software communicates with a host that provides a certificate, but the software does not properly ensure that the certificate is actually associated with that host.
 * 
 * Idea:
 * Even if a certificate is well-formed, signed, and follows the chain of trust, it may simply be a valid certificate for a different site than
 * the site that the software is interacting with. If the certificate's host-specific data is not properly checked - such as the Common Name (CN) 
 * in the Subject or the Subject Alternative Name (SAN) extension of an X.509 certificate - it may be possible for a redirection or spoofing attack
 * to allow a malicious host with a valid certificate to provide data, impersonating a trusted host. In order to ensure data integrity, the 
 * certificate must be valid and it must pertain to the site that is being accessed. Even if the software attempts to check the hostname, it is 
 * still possible to incorrectly check the hostname. For example, attackers could create a certificate with a name that begins with a trusted name 
 * followed by a NUL byte, which could cause some string-based comparisons to only examine the portion that contains the trusted name.
 * This weakness can occur even when the software uses Certificate Pinning, if the software does not verify the hostname at the time a certificate 
 * is pinned.
 * 
 * Comments:
 * (1) For loop iterates over all actions of the Input(1).
 * (2) Stores the parameters of the current action in a variable.
 * (3) It checks that the action is only available after being logged-in.
 * (4) Creates the follow-up input.
 * (5) Sets the modified certificate for the follow up input.
 * (6) Checks if the output generated by the action is different in the two cases.
 *     Or the user can retrieve the supposed content 
 *     Or it shows an error with the modified certificate.
 * 
 */ 
MR CWE_923_297 {
 { 
    for ( Action action : Input(1).actions() ){                                      //(1)
	    var pos = action.getPosition();                                              //(2)
		IMPLIES(                                                    
		      notAvailableWithoutLoggingIn( action ) 								 //(3)
			  && EQUAL ( Input(2), Input(1) )						                 //(4)
			  && Input(2).actions().get(pos).setCertificate(invalidCertificate()) 	 //(5)
			                                                                        
			 /* Nazanin: 
			 // "If the certificate's host-specific data is not properly checked - such as the Common Name (CN) in the Subject or 
			 // the Subject Alternative Name (SAN) extension of an X.509 certificate - it may be possible for a redirection or spoofing attack"
			 // According to the above definition if we have access to change the certificate's details we can perform this vulnerability.'
			*/, 
			OR(different( Output(Input(1),pos), Output(Input(2),pos) )                //(6)
			,
			  userCanRetrieveContent(action.getUser(), Output(Input(2),pos))
			)|| isError(Output(Input(2),pos))
		);//end-IMPLIES
	}//end-for
 }
}//end-MR
}
