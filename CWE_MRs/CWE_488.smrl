/**
 * Authors:
 * Nazanin Bayati Chaleshtari, n.bayati@uottawa.ca (First implementation and maintenance)
 * Fabrizio Pastore, fabrizio.pastore@uni.lu (Validation)
 */

import static smrl.mr.language.Operations.*;
import smrl.mr.language.Action;

package smrl.mr.owasp {
 
/*
 *  
 * CWE Definition:
 * The product does not sufficiently enforce boundaries between the states of different sessions, 
 * causing data to be provided to, or used by, the wrong session.
 * 
 * Idea:
 * Assuming certain pages can only be accessed in a certain order, we try to access reserved pages just before the legitimate user may access them. 
 * 
 * Comments: 
 * (1) For loop iterates over all actions of the Input(1)
 * (2) The second for loop iterates over the sequence of actions after the login.
 * (3) Checks whether the user in User() is not a supervisor of the user performing the current action.
 * (4) Checks that the requested web page does not contain dynamic content.
 * (5) Creates the follow-up input, named Input(2) that takes the login action.
 * (6) Defines the follow-up input, named Input(3) but with different credentials than the Input(2).
 * (7) Creates a copy of Input(1) with a login as b before action y (this way action y is performed as User b). 
 * (8) The system should show an error page, or different content, or a content that the user has right to access.
 * 
 * 
 */

MR CWE_488{
	{
       for(var x = 0; (x < Input(1).actions().size() ); x++){                                                  //(1)
			for (var y = x+1; (isLogin(Input(1).actions().get(x)) && y < Input(1).actions().size()); y++) {    //(2)
	  			IMPLIES(
	  				(!isSupervisorOf(User(), Input(1).actions().get(y).user)) &&                               //(3)
	  				 userCanRetrieveContent(Input(1), Output(Input(1),y))&&                                    //(4)
	  				CREATE(Input(2), Input(1).actions().get(x)) &&                                             //(5)
	  				CREATE(Input(3), changeCredentials(Input(2), User())) &&                                   //(6)
	  				CREATE(Input(4), addAction(Input(1), y, Input(3).actions().get(0)))                        //(7)
	  			,	        
             OR(                                                                                               //(8)
	  					userCanRetrieveContent(Input(4).actions().get(y+1).getUser(), Output(Input(4), y+1))
	  					,
	  					OR(Output(Input(4), y+1).isError() 
	  					,
	  					different(Output(Input(1), y+1),Output(Input(4), y+1))
	  					)
	  				)
	  			); //end-IMPLIES
  			} //end-for
		} //end-for
    }
  } //end-MR
} //end-package